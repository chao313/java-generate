<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demomaster.dao.TVoPriDAO">

    <resultMap id="resultMap" type="demomaster.vo.TVoPriVo">
        <result column="db_name" property="dbName"/>
        <result column="db_table_name" property="dbTableName"/>
        <result column="db_table_comment" property="dbTableComment"/>
        <result column="vo_package" property="voPackage"/>
        <result column="vo_class_name" property="voClassName"/>
        <result column="vo_file_name" property="voFileName"/>
        <result column="vo_freemark_path" property="voFreemarkPath"/>
        <result column="vo_imports" property="voImports"/>
    </resultMap>

    <insert id="insert"
            parameterType="demomaster.vo.TVoPriVo">
        INSERT INTO `t_vo_pri`(
        `db_name` ,
        `db_table_name` ,
        `db_table_comment` ,
        `vo_package` ,
        `vo_class_name` ,
        `vo_file_name` ,
        `vo_freemark_path` ,
        `vo_imports` 
        )VALUE(
          #{dbName}  ,
          #{dbTableName}  ,
          #{dbTableComment}  ,
          #{voPackage}  ,
          #{voClassName}  ,
          #{voFileName}  ,
          #{voFreemarkPath}  ,
          #{voImports}  
        )
    </insert>

    <insert id="inserts"
            parameterType="java.util.List">
        INSERT INTO `t_vo_pri`(
        `db_name`,
        `db_table_name`,
        `db_table_comment`,
        `vo_package`,
        `vo_class_name`,
        `vo_file_name`,
        `vo_freemark_path`,
        `vo_imports`
        )VALUES
        <foreach collection="vos" item="item" separator=",">
            (
            #{item.dbName},
            #{item.dbTableName},
            #{item.dbTableComment},
            #{item.voPackage},
            #{item.voClassName},
            #{item.voFileName},
            #{item.voFreemarkPath},
            #{item.voImports}
            )
        </foreach>
    </insert>

    <select id="queryBase" resultMap="resultMap"
            resultType="demomaster.vo.TVoPriVo"
            parameterType="demomaster.vo.TVoPriVo">
        SELECT
        `db_name`,
        `db_table_name`,
        `db_table_comment`,
        `vo_package`,
        `vo_class_name`,
        `vo_file_name`,
        `vo_freemark_path`,
        `vo_imports`
        FROM `t_vo_pri`
        <where>
            1 = 1
            <if test="dbName != null">
                AND `db_name` = #{dbName}
            </if>
            <if test="dbTableName != null">
                AND `db_table_name` = #{dbTableName}
            </if>
            <if test="dbTableComment != null">
                AND `db_table_comment` = #{dbTableComment}
            </if>
            <if test="voPackage != null">
                AND `vo_package` = #{voPackage}
            </if>
            <if test="voClassName != null">
                AND `vo_class_name` = #{voClassName}
            </if>
            <if test="voFileName != null">
                AND `vo_file_name` = #{voFileName}
            </if>
            <if test="voFreemarkPath != null">
                AND `vo_freemark_path` = #{voFreemarkPath}
            </if>
            <if test="voImports != null">
                AND `vo_imports` = #{voImports}
            </if>
        </where>
    </select>

     <select id="queryMultiTerm" resultMap="resultMap"
             resultType="demomaster.vo.TVoPriVo"
             parameterType="demomaster.vo.TVoPriMultiTermVo">
        SELECT
        `db_name`,
        `db_table_name`,
        `db_table_comment`,
        `vo_package`,
        `vo_class_name`,
        `vo_file_name`,
        `vo_freemark_path`,
        `vo_imports`
        FROM `t_vo_pri`
        <where>
            1 = 1
            <if test="dbName != null">
                 <if test="dbName._in != null">
                     AND `db_name` in
                     <foreach collection="db_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="dbName._notIn != null">
                     AND `db_name`  not in
                     <foreach collection="db_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="dbName._like != null">
                     <foreach collection="db_name._like" item="item">
                       AND `db_name` like #{item}
                     </foreach>
                 </if>
                 <if test="dbName._notLike != null">
                     <foreach collection="db_name._notLike" item="item">
                       AND `db_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="dbName._regex != null">
                     <foreach collection="db_name._regex" item="item">
                       AND `db_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="dbName._regex != null">
                     <foreach collection="db_name._regex" item="item">
                       AND `db_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="dbName._lt != null">
                      AND `db_name` <![CDATA[ < ]]>  #{db_name._lt}
                 </if>
                  <if test="dbName._le != null">
                      AND `db_name` <![CDATA[ <= ]]>  #{{db_name._lt}
                 </if>
                  <if test="dbName._gt != null">
                      AND `db_name` <![CDATA[ > ]]>  #{{db_name._lt}
                 </if>
                  <if test="dbName._ge != null">
                      AND `db_name` <![CDATA[ >= ]]>  #{{db_name._lt}
                 </if>
            </if>
            <if test="dbTableName != null">
                 <if test="dbTableName._in != null">
                     AND `db_table_name` in
                     <foreach collection="db_table_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="dbTableName._notIn != null">
                     AND `db_table_name`  not in
                     <foreach collection="db_table_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="dbTableName._like != null">
                     <foreach collection="db_table_name._like" item="item">
                       AND `db_table_name` like #{item}
                     </foreach>
                 </if>
                 <if test="dbTableName._notLike != null">
                     <foreach collection="db_table_name._notLike" item="item">
                       AND `db_table_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="dbTableName._regex != null">
                     <foreach collection="db_table_name._regex" item="item">
                       AND `db_table_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="dbTableName._regex != null">
                     <foreach collection="db_table_name._regex" item="item">
                       AND `db_table_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="dbTableName._lt != null">
                      AND `db_table_name` <![CDATA[ < ]]>  #{db_table_name._lt}
                 </if>
                  <if test="dbTableName._le != null">
                      AND `db_table_name` <![CDATA[ <= ]]>  #{{db_table_name._lt}
                 </if>
                  <if test="dbTableName._gt != null">
                      AND `db_table_name` <![CDATA[ > ]]>  #{{db_table_name._lt}
                 </if>
                  <if test="dbTableName._ge != null">
                      AND `db_table_name` <![CDATA[ >= ]]>  #{{db_table_name._lt}
                 </if>
            </if>
            <if test="dbTableComment != null">
                 <if test="dbTableComment._in != null">
                     AND `db_table_comment` in
                     <foreach collection="db_table_comment._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="dbTableComment._notIn != null">
                     AND `db_table_comment`  not in
                     <foreach collection="db_table_comment._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="dbTableComment._like != null">
                     <foreach collection="db_table_comment._like" item="item">
                       AND `db_table_comment` like #{item}
                     </foreach>
                 </if>
                 <if test="dbTableComment._notLike != null">
                     <foreach collection="db_table_comment._notLike" item="item">
                       AND `db_table_comment` not like #{item}
                     </foreach>
                 </if>
                 <if test="dbTableComment._regex != null">
                     <foreach collection="db_table_comment._regex" item="item">
                       AND `db_table_comment` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="dbTableComment._regex != null">
                     <foreach collection="db_table_comment._regex" item="item">
                       AND `db_table_comment` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="dbTableComment._lt != null">
                      AND `db_table_comment` <![CDATA[ < ]]>  #{db_table_comment._lt}
                 </if>
                  <if test="dbTableComment._le != null">
                      AND `db_table_comment` <![CDATA[ <= ]]>  #{{db_table_comment._lt}
                 </if>
                  <if test="dbTableComment._gt != null">
                      AND `db_table_comment` <![CDATA[ > ]]>  #{{db_table_comment._lt}
                 </if>
                  <if test="dbTableComment._ge != null">
                      AND `db_table_comment` <![CDATA[ >= ]]>  #{{db_table_comment._lt}
                 </if>
            </if>
            <if test="voPackage != null">
                 <if test="voPackage._in != null">
                     AND `vo_package` in
                     <foreach collection="vo_package._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voPackage._notIn != null">
                     AND `vo_package`  not in
                     <foreach collection="vo_package._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voPackage._like != null">
                     <foreach collection="vo_package._like" item="item">
                       AND `vo_package` like #{item}
                     </foreach>
                 </if>
                 <if test="voPackage._notLike != null">
                     <foreach collection="vo_package._notLike" item="item">
                       AND `vo_package` not like #{item}
                     </foreach>
                 </if>
                 <if test="voPackage._regex != null">
                     <foreach collection="vo_package._regex" item="item">
                       AND `vo_package` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voPackage._regex != null">
                     <foreach collection="vo_package._regex" item="item">
                       AND `vo_package` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voPackage._lt != null">
                      AND `vo_package` <![CDATA[ < ]]>  #{vo_package._lt}
                 </if>
                  <if test="voPackage._le != null">
                      AND `vo_package` <![CDATA[ <= ]]>  #{{vo_package._lt}
                 </if>
                  <if test="voPackage._gt != null">
                      AND `vo_package` <![CDATA[ > ]]>  #{{vo_package._lt}
                 </if>
                  <if test="voPackage._ge != null">
                      AND `vo_package` <![CDATA[ >= ]]>  #{{vo_package._lt}
                 </if>
            </if>
            <if test="voClassName != null">
                 <if test="voClassName._in != null">
                     AND `vo_class_name` in
                     <foreach collection="vo_class_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voClassName._notIn != null">
                     AND `vo_class_name`  not in
                     <foreach collection="vo_class_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voClassName._like != null">
                     <foreach collection="vo_class_name._like" item="item">
                       AND `vo_class_name` like #{item}
                     </foreach>
                 </if>
                 <if test="voClassName._notLike != null">
                     <foreach collection="vo_class_name._notLike" item="item">
                       AND `vo_class_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="voClassName._regex != null">
                     <foreach collection="vo_class_name._regex" item="item">
                       AND `vo_class_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voClassName._regex != null">
                     <foreach collection="vo_class_name._regex" item="item">
                       AND `vo_class_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voClassName._lt != null">
                      AND `vo_class_name` <![CDATA[ < ]]>  #{vo_class_name._lt}
                 </if>
                  <if test="voClassName._le != null">
                      AND `vo_class_name` <![CDATA[ <= ]]>  #{{vo_class_name._lt}
                 </if>
                  <if test="voClassName._gt != null">
                      AND `vo_class_name` <![CDATA[ > ]]>  #{{vo_class_name._lt}
                 </if>
                  <if test="voClassName._ge != null">
                      AND `vo_class_name` <![CDATA[ >= ]]>  #{{vo_class_name._lt}
                 </if>
            </if>
            <if test="voFileName != null">
                 <if test="voFileName._in != null">
                     AND `vo_file_name` in
                     <foreach collection="vo_file_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voFileName._notIn != null">
                     AND `vo_file_name`  not in
                     <foreach collection="vo_file_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voFileName._like != null">
                     <foreach collection="vo_file_name._like" item="item">
                       AND `vo_file_name` like #{item}
                     </foreach>
                 </if>
                 <if test="voFileName._notLike != null">
                     <foreach collection="vo_file_name._notLike" item="item">
                       AND `vo_file_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="voFileName._regex != null">
                     <foreach collection="vo_file_name._regex" item="item">
                       AND `vo_file_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voFileName._regex != null">
                     <foreach collection="vo_file_name._regex" item="item">
                       AND `vo_file_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voFileName._lt != null">
                      AND `vo_file_name` <![CDATA[ < ]]>  #{vo_file_name._lt}
                 </if>
                  <if test="voFileName._le != null">
                      AND `vo_file_name` <![CDATA[ <= ]]>  #{{vo_file_name._lt}
                 </if>
                  <if test="voFileName._gt != null">
                      AND `vo_file_name` <![CDATA[ > ]]>  #{{vo_file_name._lt}
                 </if>
                  <if test="voFileName._ge != null">
                      AND `vo_file_name` <![CDATA[ >= ]]>  #{{vo_file_name._lt}
                 </if>
            </if>
            <if test="voFreemarkPath != null">
                 <if test="voFreemarkPath._in != null">
                     AND `vo_freemark_path` in
                     <foreach collection="vo_freemark_path._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voFreemarkPath._notIn != null">
                     AND `vo_freemark_path`  not in
                     <foreach collection="vo_freemark_path._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voFreemarkPath._like != null">
                     <foreach collection="vo_freemark_path._like" item="item">
                       AND `vo_freemark_path` like #{item}
                     </foreach>
                 </if>
                 <if test="voFreemarkPath._notLike != null">
                     <foreach collection="vo_freemark_path._notLike" item="item">
                       AND `vo_freemark_path` not like #{item}
                     </foreach>
                 </if>
                 <if test="voFreemarkPath._regex != null">
                     <foreach collection="vo_freemark_path._regex" item="item">
                       AND `vo_freemark_path` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voFreemarkPath._regex != null">
                     <foreach collection="vo_freemark_path._regex" item="item">
                       AND `vo_freemark_path` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voFreemarkPath._lt != null">
                      AND `vo_freemark_path` <![CDATA[ < ]]>  #{vo_freemark_path._lt}
                 </if>
                  <if test="voFreemarkPath._le != null">
                      AND `vo_freemark_path` <![CDATA[ <= ]]>  #{{vo_freemark_path._lt}
                 </if>
                  <if test="voFreemarkPath._gt != null">
                      AND `vo_freemark_path` <![CDATA[ > ]]>  #{{vo_freemark_path._lt}
                 </if>
                  <if test="voFreemarkPath._ge != null">
                      AND `vo_freemark_path` <![CDATA[ >= ]]>  #{{vo_freemark_path._lt}
                 </if>
            </if>
            <if test="voImports != null">
                 <if test="voImports._in != null">
                     AND `vo_imports` in
                     <foreach collection="vo_imports._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voImports._notIn != null">
                     AND `vo_imports`  not in
                     <foreach collection="vo_imports._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="voImports._like != null">
                     <foreach collection="vo_imports._like" item="item">
                       AND `vo_imports` like #{item}
                     </foreach>
                 </if>
                 <if test="voImports._notLike != null">
                     <foreach collection="vo_imports._notLike" item="item">
                       AND `vo_imports` not like #{item}
                     </foreach>
                 </if>
                 <if test="voImports._regex != null">
                     <foreach collection="vo_imports._regex" item="item">
                       AND `vo_imports` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voImports._regex != null">
                     <foreach collection="vo_imports._regex" item="item">
                       AND `vo_imports` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="voImports._lt != null">
                      AND `vo_imports` <![CDATA[ < ]]>  #{vo_imports._lt}
                 </if>
                  <if test="voImports._le != null">
                      AND `vo_imports` <![CDATA[ <= ]]>  #{{vo_imports._lt}
                 </if>
                  <if test="voImports._gt != null">
                      AND `vo_imports` <![CDATA[ > ]]>  #{{vo_imports._lt}
                 </if>
                  <if test="voImports._ge != null">
                      AND `vo_imports` <![CDATA[ >= ]]>  #{{vo_imports._lt}
                 </if>
            </if>
        </where>
        </select>

    <update id="updateBase"
            parameterType="demomaster.vo.TVoPriVo">
        UPDATE `t_vo_pri`
        <set>
            <if test="source.dbName != null">
                `db_name` = #{source.dbName},
            </if>
            <if test="source.dbTableName != null">
                `db_table_name` = #{source.dbTableName},
            </if>
            <if test="source.dbTableComment != null">
                `db_table_comment` = #{source.dbTableComment},
            </if>
            <if test="source.voPackage != null">
                `vo_package` = #{source.voPackage},
            </if>
            <if test="source.voClassName != null">
                `vo_class_name` = #{source.voClassName},
            </if>
            <if test="source.voFileName != null">
                `vo_file_name` = #{source.voFileName},
            </if>
            <if test="source.voFreemarkPath != null">
                `vo_freemark_path` = #{source.voFreemarkPath},
            </if>
            <if test="source.voImports != null">
                `vo_imports` = #{source.voImports}
            </if>
        </set>
        <where>
            1 =1
            <if test="target.dbName != null">
                AND `db_name` = #{target.dbName}
            </if>
            <if test="target.dbTableName != null">
                AND `db_table_name` = #{target.dbTableName}
            </if>
            <if test="target.dbTableComment != null">
                AND `db_table_comment` = #{target.dbTableComment}
            </if>
            <if test="target.voPackage != null">
                AND `vo_package` = #{target.voPackage}
            </if>
            <if test="target.voClassName != null">
                AND `vo_class_name` = #{target.voClassName}
            </if>
            <if test="target.voFileName != null">
                AND `vo_file_name` = #{target.voFileName}
            </if>
            <if test="target.voFreemarkPath != null">
                AND `vo_freemark_path` = #{target.voFreemarkPath}
            </if>
            <if test="target.voImports != null">
                AND `vo_imports` = #{target.voImports}
            </if>
        </where>
    </update>

    <update id="updateBaseIncludeNull"
            parameterType="demomaster.vo.TVoPriVo">
        UPDATE `t_vo_pri`
        <set>
            `db_name` = #{source.dbName},
            `db_table_name` = #{source.dbTableName},
            `db_table_comment` = #{source.dbTableComment},
            `vo_package` = #{source.voPackage},
            `vo_class_name` = #{source.voClassName},
            `vo_file_name` = #{source.voFileName},
            `vo_freemark_path` = #{source.voFreemarkPath},
            `vo_imports` = #{source.voImports}
        </set>
        <where>
            1 =1
            <if test="target.dbName != null">
                AND `db_name` = #{target.dbName}
            </if>
            <if test="target.dbTableName != null">
                AND `db_table_name` = #{target.dbTableName}
            </if>
            <if test="target.dbTableComment != null">
                AND `db_table_comment` = #{target.dbTableComment}
            </if>
            <if test="target.voPackage != null">
                AND `vo_package` = #{target.voPackage}
            </if>
            <if test="target.voClassName != null">
                AND `vo_class_name` = #{target.voClassName}
            </if>
            <if test="target.voFileName != null">
                AND `vo_file_name` = #{target.voFileName}
            </if>
            <if test="target.voFreemarkPath != null">
                AND `vo_freemark_path` = #{target.voFreemarkPath}
            </if>
            <if test="target.voImports != null">
                AND `vo_imports` = #{target.voImports}
            </if>
        </where>
    </update>

    <delete id="deleteBase"
            parameterType="demomaster.vo.TVoPriVo">
        DELETE FROM `t_vo_pri`
        <where>
            1 =1
            <if test="dbName != null">
                AND `db_name` = #{dbName}
            </if>
            <if test="dbTableName != null">
                AND `db_table_name` = #{dbTableName}
            </if>
            <if test="dbTableComment != null">
                AND `db_table_comment` = #{dbTableComment}
            </if>
            <if test="voPackage != null">
                AND `vo_package` = #{voPackage}
            </if>
            <if test="voClassName != null">
                AND `vo_class_name` = #{voClassName}
            </if>
            <if test="voFileName != null">
                AND `vo_file_name` = #{voFileName}
            </if>
            <if test="voFreemarkPath != null">
                AND `vo_freemark_path` = #{voFreemarkPath}
            </if>
            <if test="voImports != null">
                AND `vo_imports` = #{voImports}
            </if>
        </where>
    </delete>


    <select id="queryByPrimaryKey" resultMap="resultMap"
            resultType="demomaster.vo.TVoPriVo">
        SELECT
        `db_name`,
        `db_table_name`,
        `db_table_comment`,
        `vo_package`,
        `vo_class_name`,
        `vo_file_name`,
        `vo_freemark_path`,
        `vo_imports`
        FROM `t_vo_pri`
        <where>
            1 =1
            AND `db_name` = #{dbName}
        </where>
    </select>

    <delete id="deleteByPrimaryKey">
        DELETE FROM `t_vo_pri`
        <where>
            1 = 1
               AND `db_name` = #{dbName}
        </where>
    </delete>

    <update id="updateByPrimaryKey"
            parameterType="demomaster.vo.TVoPriVo">
        UPDATE `t_vo_pri`
        <set>
               <if test="source.dbTableName != null">
                   `db_table_name` = #{source.dbTableName},
               </if>
               <if test="source.dbTableComment != null">
                   `db_table_comment` = #{source.dbTableComment},
               </if>
               <if test="source.voPackage != null">
                   `vo_package` = #{source.voPackage},
               </if>
               <if test="source.voClassName != null">
                   `vo_class_name` = #{source.voClassName},
               </if>
               <if test="source.voFileName != null">
                   `vo_file_name` = #{source.voFileName},
               </if>
               <if test="source.voFreemarkPath != null">
                   `vo_freemark_path` = #{source.voFreemarkPath},
               </if>
               <if test="source.voImports != null">
                   `vo_imports` = #{source.voImports}
               </if>
        </set>
        <where>
            1 =1
               AND `db_name` = #{target.dbName}
        </where>
    </update>

</mapper>