<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demo.spring.boot.demospringboot.demo2.dao.THostDAO">

    <resultMap id="resultMap" type="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        <result column="id" property="id"/>
        <result column="account" property="account"/>
        <result column="create_time" property="createTime"/>
        <result column="host_ip" property="hostIp"/>
        <result column="password" property="password"/>
        <result column="update_time" property="updateTime"/>
        <result column="user_id" property="userId"/>
        <result column="port" property="port"/>
    </resultMap>

    <insert id="insert"
            parameterType="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        INSERT INTO `t_host`(
        `id` ,
        `account` ,
        `create_time` ,
        `host_ip` ,
        `password` ,
        `update_time` ,
        `user_id` ,
        `port` 
        )VALUE(
          #{id}  ,
          #{account}  ,
          #{createTime}  ,
          #{hostIp}  ,
          #{password}  ,
          #{updateTime}  ,
          #{userId}  ,
          #{port}  
        )
    </insert>

    <insert id="inserts"
            parameterType="java.util.List">
        INSERT INTO `t_host`(
        `id`,
        `account`,
        `create_time`,
        `host_ip`,
        `password`,
        `update_time`,
        `user_id`,
        `port`
        )VALUES
        <foreach collection="vos" item="item" separator=",">
            (
            #{item.id},
            #{item.account},
            #{item.createTime},
            #{item.hostIp},
            #{item.password},
            #{item.updateTime},
            #{item.userId},
            #{item.port}
            )
        </foreach>
    </insert>

    <select id="queryBase" resultMap="resultMap"
            resultType="demo.spring.boot.demospringboot.demo2.vo.THostVo"
            parameterType="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        SELECT
        `id`,
        `account`,
        `create_time`,
        `host_ip`,
        `password`,
        `update_time`,
        `user_id`,
        `port`
        FROM `t_host`
        <where>
            1 = 1
            <if test="id != null">
                AND `id` = #{id}
            </if>
            <if test="account != null">
                AND `account` = #{account}
            </if>
            <if test="createTime != null">
                AND `create_time` = #{createTime}
            </if>
            <if test="hostIp != null">
                AND `host_ip` = #{hostIp}
            </if>
            <if test="password != null">
                AND `password` = #{password}
            </if>
            <if test="updateTime != null">
                AND `update_time` = #{updateTime}
            </if>
            <if test="userId != null">
                AND `user_id` = #{userId}
            </if>
            <if test="port != null">
                AND `port` = #{port}
            </if>
        </where>
    </select>

    <update id="updateBase"
            parameterType="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        UPDATE `t_host`
        <set>
            <if test="source.createTime != null">
                `create_time` = #{source.createTime},
            </if>
            <if test="source.hostIp != null">
                `host_ip` = #{source.hostIp},
            </if>
            <if test="source.password != null">
                `password` = #{source.password},
            </if>
            <if test="source.updateTime != null">
                `update_time` = #{source.updateTime},
            </if>
            <if test="source.userId != null">
                `user_id` = #{source.userId},
            </if>
            <if test="source.port != null">
                `port` = #{source.port}
            </if>
        </set>
        <where>
            1 =1
            <if test="target.id != null">
                AND `id` = #{target.id}
            </if>
            <if test="target.account != null">
                AND `account` = #{target.account}
            </if>
            <if test="target.createTime != null">
                AND `create_time` = #{target.createTime}
            </if>
            <if test="target.hostIp != null">
                AND `host_ip` = #{target.hostIp}
            </if>
            <if test="target.password != null">
                AND `password` = #{target.password}
            </if>
            <if test="target.updateTime != null">
                AND `update_time` = #{target.updateTime}
            </if>
            <if test="target.userId != null">
                AND `user_id` = #{target.userId}
            </if>
            <if test="target.port != null">
                AND `port` = #{target.port}
            </if>
        </where>
    </update>

    <update id="updateBaseIncludeNull"
            parameterType="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        UPDATE `t_host`
        <set>
            `create_time` = #{source.createTime},
            `host_ip` = #{source.hostIp},
            `password` = #{source.password},
            `update_time` = #{source.updateTime},
            `user_id` = #{source.userId},
            `port` = #{source.port}
        </set>
        <where>
            1 =1
            <if test="target.id != null">
                AND `id` = #{target.id}
            </if>
            <if test="target.account != null">
                AND `account` = #{target.account}
            </if>
            <if test="target.createTime != null">
                AND `create_time` = #{target.createTime}
            </if>
            <if test="target.hostIp != null">
                AND `host_ip` = #{target.hostIp}
            </if>
            <if test="target.password != null">
                AND `password` = #{target.password}
            </if>
            <if test="target.updateTime != null">
                AND `update_time` = #{target.updateTime}
            </if>
            <if test="target.userId != null">
                AND `user_id` = #{target.userId}
            </if>
            <if test="target.port != null">
                AND `port` = #{target.port}
            </if>
        </where>
    </update>

    <delete id="deleteBase"
            parameterType="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        DELETE FROM `t_host`
        <where>
            1 =1
            <if test="id != null">
                AND `id` = #{id}
            </if>
            <if test="account != null">
                AND `account` = #{account}
            </if>
            <if test="createTime != null">
                AND `create_time` = #{createTime}
            </if>
            <if test="hostIp != null">
                AND `host_ip` = #{hostIp}
            </if>
            <if test="password != null">
                AND `password` = #{password}
            </if>
            <if test="updateTime != null">
                AND `update_time` = #{updateTime}
            </if>
            <if test="userId != null">
                AND `user_id` = #{userId}
            </if>
            <if test="port != null">
                AND `port` = #{port}
            </if>
        </where>
    </delete>


    <select id="queryByPrimaryKey" resultMap="resultMap"
            resultType="demo.spring.boot.demospringboot.demo2.vo.THostVo">
        SELECT
        `id`,
        `account`,
        `create_time`,
        `host_ip`,
        `password`,
        `update_time`,
        `user_id`,
        `port`
        FROM `t_host`
        <where>
            1 =1
            AND `id` = #{id}
            AND `account` = #{account}
        </where>
    </select>

    <delete id="deleteByPrimaryKey">
        DELETE FROM `t_host`
        <where>
            1 = 1
               AND `id` = #{id}
               AND `account` = #{account}
        </where>
    </delete>

</mapper>